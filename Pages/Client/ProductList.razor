@page "/ProductList"
@page "/ProductList/{category}"
@layout ProductLayout;
@attribute [Authorize(Roles = "admin,user")]
@using oswald_online_shop.Data.ProductServices


      <div class="bg-gray-100 p-4">
        <h1 class="text-center text-2xl font-semibold text-slate-800">Listado de productos</h1>
      </div>

      <div class="grid grid-cols-1 gap-2 sm:grid-cols-2 sm:gap-4 md:grid-cols-2 md:gap-6 lg:grid-cols-3 xl:grid-cols-4 p-6">

@if (products==null)
{
      <div class="bg-gray-100 p-4">
        <h1 class="text-center text-2xl font-semibold text-slate-800">NO se han agregado productos</h1>
      </div>
}else
{
    @foreach(var product in products)
    {
        <div class="p-4 md:w-full">
          <div class="h-full overflow-hidden rounded-lg bg-gradient-to-r from-indigo-50 to-blue-50 shadow-xl hover:shadow-2xl transition duration-300">
            <img class="duration-400 w-full scale-110 object-cover object-center transition-all hover:scale-100 md:h-36 lg:h-48" src="@product.photoURL" alt="blog" />
            <div class="p-6">
              <h2 class="title-font mb-1 text-xs font-medium tracking-widest text-gray-400">@product.category</h2>
              <h1 class="title-font mb-3 text-lg font-medium text-gray-600">@product.name</h1>
              <div class="flex flex-wrap items-center justify-center">
                <button class="shadow-cla-blue rounded-lg bg-gradient-to-r from-cyan-400 to-blue-400 px-4 py-1 drop-shadow-md transition duration-300 hover:scale-105">Agregar al carrito</button>
              </div>
            </div>
          </div>
        </div>

        
    }
}
</div>
@code {
      [Parameter]
public  string category {get;set;}
  [CascadingParameter]
  private Task<AuthenticationState> state { get; set; }
    public  static IEnumerable<Product> products{ get; set; }
    public static MyDBContext MydbContext = new MyDBContext();
    private static ProductService productServices = new ProductService(MydbContext);
    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (category==null)
            {
                    var uthState = await state;

                    var message= $"{uthState.User.Identity.Name} has logged in";
                    Console.WriteLine(message);

                products = await productServices.getAllProducts();

            }
            else
            {
                products = await productServices.getProductsByCategory(category);

            }


        }
        catch (Exception e)
        {
            throw e;
        }

    }

}
